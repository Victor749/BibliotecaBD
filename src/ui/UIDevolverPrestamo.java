/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.Alquiler;
import negocio.CapaNegocio;
import negocio.Usuario;

/**
 *
 * @author USUARIO
 */
public class UIDevolverPrestamo extends javax.swing.JFrame {

    /**
     * Creates new form UIHacerPrestamo
     */
    
    private ArrayList<Alquiler> alquileres;
    private Usuario usuario;
    private CapaNegocio negocio;
    private DefaultTableModel modeloTabla;
    
    
    
    public UIDevolverPrestamo(CapaNegocio capaNegocio) {
        initComponents();
        this.negocio = capaNegocio;
    }
    
    public void iniciar() {
        this.setTitle("Devolver Préstamo");
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        mostrarTabla();
        alquileres = new ArrayList();
        jButtonDevolverPrestamo.setEnabled(false);
        jButtonVerPrestamo.setEnabled(false);
    }
    
    private void mostrarTabla() {
        String [][] roster = {};
        String [] columnas = {"ISBN", "Id", "FH Préstamo", "FH Estimada"};
        this.modeloTabla = new DefaultTableModel(roster, columnas);
        this.jTableEjemplares.setModel(modeloTabla);
    }
    
    private void cargarDatos() {
        int rows = this.modeloTabla.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            this.modeloTabla.removeRow(i);
        }
        for (int j = 0; j < alquileres.size(); j++) {
            this.modeloTabla.insertRow(this.modeloTabla.getRowCount(), new Object[]{});
            this.modeloTabla.setValueAt(alquileres.get(j).getEdicion_isbn(), this.modeloTabla.getRowCount() - 1, 0);
            this.modeloTabla.setValueAt(String.valueOf(alquileres.get(j).getEjemplar_id()), this.modeloTabla.getRowCount() - 1, 1);
            this.modeloTabla.setValueAt(alquileres.get(j).getFecha_hora_prestamo(), this.modeloTabla.getRowCount() - 1, 2);
            this.modeloTabla.setValueAt(alquileres.get(j).getFecha_hora_estimada_entrega(), this.modeloTabla.getRowCount() - 1, 3);
        }
    }
    
    private boolean validarCedula(String cadena) {
        char[] charArray = cadena.toCharArray();
        if (charArray.length != 10) {
            return false;
        }
        for(char c : charArray) {
            if (!Character.isDigit(c))
                return false;
        }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinField3 = new com.toedter.components.JSpinField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEjemplares = new javax.swing.JTable();
        jButtonDevolverPrestamo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCedula = new javax.swing.JTextField();
        jLabelCedula = new javax.swing.JLabel();
        jButtonVerPrestamo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jTableEjemplares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableEjemplares);

        jButtonDevolverPrestamo.setText("Devolver Préstamo");
        jButtonDevolverPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverPrestamoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Cédula de Usuario:");

        jTextFieldCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCedulaKeyReleased(evt);
            }
        });

        jLabelCedula.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelCedula.setForeground(new java.awt.Color(255, 0, 51));

        jButtonVerPrestamo.setText("Ver Préstamo");
        jButtonVerPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerPrestamoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonDevolverPrestamo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCedula)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldCedula))
                        .addGap(70, 70, 70)
                        .addComponent(jButtonVerPrestamo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonVerPrestamo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCedula)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonDevolverPrestamo)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCedulaKeyReleased
        if(validarCedula(this.jTextFieldCedula.getText())) {
            List<Usuario> usuarios = negocio.consultarUsuario(jTextFieldCedula.getText());
            if (usuarios.isEmpty()) {
                this.jLabelCedula.setText("* Ingrese una cédula válida.");
                jButtonVerPrestamo.setEnabled(false);
                jButtonDevolverPrestamo.setEnabled(false);
                alquileres.clear();
                cargarDatos();
            } else {
                if (usuarios.get(0).getPuede_prestamo() == 0) {
                    usuario = usuarios.get(0);
                    this.jLabelCedula.setText("");
                    jButtonVerPrestamo.setEnabled(true);
                } else {
                    this.jLabelCedula.setText("* El usuario no tiene un préstamo pendiente.");
                    jButtonVerPrestamo.setEnabled(false);
                    jButtonDevolverPrestamo.setEnabled(false);
                    alquileres.clear();
                    cargarDatos();
                } 
            }
        } else {
            this.jLabelCedula.setText("* Una cédula tiene 10 dígitos.");
            jButtonVerPrestamo.setEnabled(false);
            jButtonDevolverPrestamo.setEnabled(false);
            alquileres.clear();
            cargarDatos();
        }
    }//GEN-LAST:event_jTextFieldCedulaKeyReleased

    private void jButtonDevolverPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverPrestamoActionPerformed
        try {
            int resultado = negocio.devolverPrestamo(usuario, alquileres);
            switch (resultado) {
                case 0:
                    JOptionPane.showMessageDialog(this, "Préstamo devuelto con éxito.", "OK", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "No se pudo devolver el préstamo. El usuario no tiene un préstamo pendiente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    break;
            }
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(this, "No se pudo devolver el préstamo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDevolverPrestamoActionPerformed

    private void jButtonVerPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerPrestamoActionPerformed
        alquileres = (ArrayList) negocio.consultarAlquiler(usuario.getCedula());
        if (!alquileres.isEmpty()) {
            cargarDatos();
            jButtonDevolverPrestamo.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo recuperar los alquileres. El usuario no tiene un préstamo pendiente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonVerPrestamoActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIHacerPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIHacerPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIHacerPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIHacerPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIHacerPrestamo().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDevolverPrestamo;
    private javax.swing.JButton jButtonVerPrestamo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.components.JSpinField jSpinField3;
    private javax.swing.JTable jTableEjemplares;
    private javax.swing.JTextField jTextFieldCedula;
    // End of variables declaration//GEN-END:variables
}
